<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.mall.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.github.mall.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="INTEGER" property="phone"/>
        <result column="date_time" jdbcType="TIMESTAMP" property="dateTime"/>
        <result column="salary" jdbcType="DECIMAL" property="salary"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, age, name, phone, date_time, salary, sex, password, email, address
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.github.mall.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (age, name, phone,
        date_time, salary, sex,
        password, email, address
        )
        values (#{age,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER},
        #{dateTime,jdbcType=TIMESTAMP}, #{salary,jdbcType=DECIMAL}, #{sex,jdbcType=INTEGER},
        #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.github.mall.entity.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="age != null">
                age,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="dateTime != null">
                date_time,
            </if>
            <if test="salary != null">
                salary,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="address != null">
                address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=INTEGER},
            </if>
            <if test="dateTime != null">
                #{dateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salary != null">
                #{salary,jdbcType=DECIMAL},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.mall.entity.User">
        update user
        <set>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=INTEGER},
            </if>
            <if test="dateTime != null">
                date_time = #{dateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salary != null">
                salary = #{salary,jdbcType=DECIMAL},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.mall.entity.User">
        update user
        set age = #{age,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=INTEGER},
        date_time = #{dateTime,jdbcType=TIMESTAMP},
        salary = #{salary,jdbcType=DECIMAL},
        sex = #{sex,jdbcType=INTEGER},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="bean" index="index" open="" close="" separator=";">
            update user
            <set>
                age=#{bean.age}
            </set>
            where name=#{bean.name}
            order by phone desc limit 1
        </foreach>


    </update>
</mapper>